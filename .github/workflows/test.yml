name: Test Cache

on:
  push:
    branches:
    - master

jobs:
  # End to end save and restore
  test-save:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Generate files in working directory
      shell: bash
      run: |
        mkdir -p test-cache
        dd if=/dev/urandom of=test-cache/file.txt count=2500 bs=1048576
    - name: Compute hash
      run: |
        echo ${{ hashFiles('test-cache/file.txt') }}
    - name: Save cache
      uses: actions/cache@v3
      with:
        key: test-${{ runner.os }}-${{ github.run_id }}
        path: test-cache
  test-restore:
    needs: test-save
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Record start time
      id: start-time
      run: |
        echo "##[set-output name=time;]$(date +%s)"
    - name: Restore cache
      uses: actions/cache@v3
      with:
        key: test-${{ runner.os }}-${{ github.run_id }}
        path: test-cache
    - name: Record stop time
      id: stop-time
      run: |
        echo "##[set-output name=time;]$(date +%s)"
    - name: Compute hash
      run: |
        echo ${{ hashFiles('test-cache/file.txt') }}
    - name: Verify cache files in working directory
      shell: bash
      run: |
        if [ ! -f test-cache/file.txt ]; then
            echo "Files not found"
            exit 1
        fi
        
        #size=$(du -b test-cache/file.txt | awk '{print $1}')
        #expected="157286400"
        #if [ "$size" != "$expected" ]; then
        #  echo "Invalid cache size. Was $size, expected $expected"
        #  exit 1
        #fi
        
        time_diff="$(( ${{ steps.stop-time.outputs.time }} - ${{ steps.start-time.outputs.time }} ))"
        time_limit=120
        if [ "$time_diff" -gt "$time_limit" ]; then
          echo "Exceeded time limit of $time_limit sec"
          exit 1
        fi
