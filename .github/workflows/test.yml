name: Test Cache

on:
  push:
    branches:
    - master

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1.1.0
    - name: Record start time
      id: start-time
      run: |
        echo "##[set-output name=time;]$(date +%s)"
    - uses: dhadka/cache@timer
      id: cache
      with:
        fail-on-restore: true
        path: ~/cache-folder
        key: ${{ runner.os }}-cache-canary-2
    - name: Record stop time
      id: stop-time
      run: |
        echo "##[set-output name=time;]$(date +%s)"
    - name: Delete cache tarball
      if: steps.cache.outputs.cache-hit == 'true'
      run: |
        find ~/work/_temp -name "cache.tgz"
        find ~/work/_temp -name "cache.tgz" -exec rm -f {} \;
        find ~/work/_temp -name "cache.tgz"
    - name: Create cache content
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        echo "Should not have a cache miss"
        exit 1
        mkdir -p ~/cache-folder
        dd if=/dev/urandom of=~/cache-folder/file.txt count=150 bs=1048576
    - name: Validate cache
      if: steps.cache.outputs.cache-hit == 'true'
      run: |
        size=$(du -b ~/cache-folder/file.txt | awk '{print $1}')
        expected="157286400"
        if [ "$size" != "$expected" ]; then
          echo "Invalid cache size. Was $size, expected $expected"
          exit 1
        fi
        
        time_diff="$(( ${{ steps.stop-time.outputs.time }} - ${{ steps.start-time.outputs.time }} ))"
        time_limit=120
        if [ "$time_diff" -gt "$time_limit" ]; then
          echo "Exceeded time limit of $time_limit sec"
          exit 1
        fi
      
